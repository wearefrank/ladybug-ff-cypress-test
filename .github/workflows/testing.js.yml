# When maintaining this file, please have a fixed sequence
# of the keys within a step:
#   name, id, if, working-directory, run/uses, others.
# 
name: Testing
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      buildLatestFFandLadybugCode:
        description: If true, build code of frankframework, ladybug and ladybug-frontend and start server from frank-runner/specials/ladybug
        type: boolean
        default: false
        required: true
jobs:
  testing:
    strategy:
      matrix:
        include:
          - test-app: "false"
            specs: "cypress/e2e/cypress/common-over-test-envs/**,cypress/e2e/cypress/default/**"
            configurations: configurationsDefault
          - test-app: "true"
            specs: "cypress/e2e/cypress/common-over-test-envs/**,cypress/e2e/cypress/with-ladybug-ff-test-webapp/**"
            configurations: configurationsTestWebapp
    name: Ladybug + Frank!Framework, test-app = ${{ matrix.test-app }}
    runs-on: ubuntu-latest
    steps:
      - name: Decide about building the code
        id: decideAboutBuildCode
        run: if [[ "${{ github.event.inputs.buildLatestFFandLadybugCode }}" == "" ]]; then echo "false"; else echo "${{ github.event.inputs.buildLatestFFandLadybugCode }}"; fi > temp; echo "buildCode=$(cat temp)" >> $GITHUB_OUTPUT
      - name: Show decision
        run: echo "buildCode is ${{ steps.decideAboutBuildCode.outputs.buildCode }}"
      - name: Checkout Frank!Runner
        uses: actions/checkout@v4
        with:
          repository: wearefrank/frank-runner
          path: frank-runner
      - name: See commit number of checked-out frank-runner
        working-directory: frank-runner
        run: git log -1
      - name: Set port where Frank!Framework is served
        run: echo "tomcat.connector.port=8090" > frank-runner/build.properties
      - name: Set secure port
        run: echo "tomcat.secure.port=8091" >> frank-runner/build.properties
      - name: Set debug to true
        run: echo "debug=true" >> frank-runner/build.properties
      # Path is relative to project.dir, which depends on the way the FF! is started.
      - name: Load configurations from ladybug-ff-cypress-test - with project.dir is frank-runner/examples/Frank2Example1
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'false' && matrix.test-app == 'false' }}
        run: echo "override.configurations.dir=../../../ladybug-ff-cypress-test/TestConfigurations/${{ matrix.configurations }}" >> frank-runner/build.properties
      - name: Load configurations from ladybug-ff-cypress-test - with project ladybug-ff-test-webapp
        if: ${{ matrix.test-app == 'true' }}
        run: echo "override.configurations.dir=../ladybug-ff-cypress-test/TestConfigurations/${{ matrix.configurations }}" >> frank-runner/build.properties
      - name: Load configurations from ladybug-ff-cypress-test - with project.dir is frankframework/webapp
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'false' }}
        run: echo "override.configurations.dir=../../ladybug-ff-cypress-test/TestConfigurations/${{ matrix.configurations }}" >> frank-runner/build.properties
      - name: Checkout ladybug-ff-cypress-test
        uses: actions/checkout@v4
        with:
          path: ladybug-ff-cypress-test
      - name: Copy cypress.config_cicd.ts to cypress.config.ts to listen to correct port
        working-directory: ladybug-ff-cypress-test
        run: cp cypress.config_cicd.ts cypress.config.ts
      - name: Use Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"
      - name: Update yarn
        working-directory: "ladybug-ff-cypress-test"
        run: corepack enable
      - name: Show node version
        working-directory: "ladybug-ff-cypress-test"
        run: node -v
      - name: Show yarn version
        working-directory: "ladybug-ff-cypress-test"
        run: yarn -v
      - name: Install packages
        working-directory: ladybug-ff-cypress-test
        run: yarn install --immutable
      - name: Cache Frank!Runner dependencies - build
        uses: actions/cache@v3
        with:
          path: frank-runner/build
          key: ${{ runner.os }}-frank-runner-build
          restore-keys: |
            ${{ runner.os }}-frank-runner-build
      - name: Cache Frank!Runner dependencies - download
        uses: actions/cache@v3
        with:
          path: frank-runner/download
          key: ${{ runner.os }}-frank-runner-download
          restore-keys: |
            ${{ runner.os }}-frank-runner-download
      - name: Show current time, allows you to check that logs are not old
        run: date
      - name: Let Frank!Runner do its downloads
        working-directory: ladybug-ff-cypress-test
        run: yarn run installFrankRunnerEnv
      - name: Remove old Tomcat versions - download
        working-directory: frank-runner
        run: rm -rf download/apache-tomcat-9*
      - name: Remove old Tomcat versions - build
        working-directory: frank-runner
        run: rm -rf build/apache-tomcat-9*
      - name: Show apache-tomcat directories
        working-directory: frank-runner
        run: find . -path './build/*' -name 'apache-tomcat*'
      - name: Check that there is only one version of Tomcat
        working-directory: frank-runner
        run: test $(find . -path './build/*' -name 'apache-tomcat*' | wc -w) -eq 1
      - name: Delete old Ladybug test reports
        working-directory: frank-runner
        run: find . -path './build/apache-tomcat*/logs/testtool*' -delete
      - name: Remove old catalina.out
        working-directory: frank-runner
        run: find . -path './build/apache-tomcat*/catalina.out' -delete
      # Build the latest code if buildLatestFFandLadybugCode
      - name: Cache Maven downloads
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository/
          key: ${{ runner.os }}-maven
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Checkout ladybug-frontend
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: wearefrank/ladybug-frontend
          path: ladybug-frontend
      - name: Checkout ladybug (backend)
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: wearefrank/ladybug
          path: ladybug
      - name: Checkout frankframework
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: frankframework/frankframework
          path: frankframework
      - name: Check out ladybug-ff-test-webapp
        if: ${{ matrix.test-app == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: wearefrank/ladybug-ff-test-webapp
          path: ladybug-ff-test-webapp
      - name: Put build.properties in ladybug-ff-test-webapp
        if: ${{ matrix.test-app == 'true' }}  
        run: cp build-ladybug-ff-test-webapp.properties ../../../ladybug-ff-test-webapp/build.properties
        working-directory: ladybug-ff-cypress-test/.github/workflows
      - name: Adjust pom.xml files so that ladybug-frontend, ladybug and frankframework reference each other
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'false' }}
        working-directory: frank-runner/specials/util/syncPomVersions
        run: ./run.sh
      # If use the latest FF! build for ladybug-ff-test-webapp, we do not need to sync. Version is just referred as LATEST.
      - name: Adjust pom.xml files so that ladybug-ff-test-webapp, FF!, ladybug and ladybug-frontend can find each other
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'true' }}
        working-directory: frank-runner/specials/util/syncPomVersions
        run: ./runIncludingLadybugFfTestWebapp.sh
      - name: Build ladybug-frontend
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        working-directory: frank-runner/specials/ladybug-frontend
        run: ./run.sh
      - name: Put build.properties in iaf-webapp
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        working-directory: ladybug-ff-cypress-test/.github/workflows
        run: cp build-iaf-webapp.properties ../../../frank-runner/specials/iaf-webapp/build.properties
        # When frank-runner/specials/iaf-webapp is executed, we always get the Maven artifacts in .m2.
      - name: Do not start build from iaf-webapp if running ladybug-ff-test-webapp
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'true' }}
        working-directory: frank-runner/specials/iaf-webapp
        run: echo "skip.start=true" >> build.properties
      - name: Put build.properties in ladybug
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        working-directory: ladybug-ff-cypress-test/.github/workflows
        run: cp build-ladybug.properties ../../../frank-runner/specials/ladybug/build.properties
      - name: Start server using Frank!Runner in background (official release) - no ladybug-ff-test-webapp
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'false' && matrix.test-app == 'false' }}
        working-directory: frank-runner
        run: ./restart.sh > serverStartLog.log &
      - name: Start server of locally-built code - no ladybug-ff-test-webapp
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'false' }}
        working-directory: frank-runner/specials/ladybug
        run: ./restart.sh > serverStartLog.log &
      - name: Build frank-runner/specials/iaf-webapp but do not start it
        if: ${{ steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'true' }}
        working-directory: frank-runner/specials/ladybug
        run: ./restart.sh > buildIafWebapp.log
      - name: Start ladybug-ff-test-webapp with FF! build we have (built) as Maven artifact
        if: ${{ matrix.test-app == 'true' }}
        working-directory: ladybug-ff-test-webapp
        run: ./restart.sh > serverStartLog.log &
      - name: Wait for server to be available
        working-directory: ladybug-ff-cypress-test/.github/workflows
        run: ./waitForUrl.sh http://localhost:8090 900
      - name: Be sure there are no old videos
        run: rm -rf ladybug-ff-cypress-test/cypress/videos
      - name: Be sure there are no old screenshots
        run: rm -rf ladybug-ff-cypress-test/cypress/screenshots
      - name: Try to access server directly with curl
        run: curl -v -i http://localhost:8090
      - name: Run the tests
        working-directory: ladybug-ff-cypress-test
        run: yarn cypress run --spec "${{ matrix.specs }}"
      - name: Show files
        if: always()
        run: tree -L 5 .
      - name: Store ladybug (backend) pom.xml
        if: ${{ always() && steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ladybug pom.xml test-app = ${{ matrix.test-app }}
          path: ladybug/pom.xml
      - name: Store frankframework/ladybug/pom.xml
        if: ${{ always() && steps.decideAboutBuildCode.outputs.buildCode == 'true' }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: frankframework ladybug pom.xml test-app = ${{ matrix.test-app }}
          path: frankframework/ladybug/pom.xml
      - name: Store ladybug-ff-test-webapp/pom.xml
        if: ${{ always() && matrix.test-app == 'true' }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ladybug-ff-test-webapp pom.xml test-app = ${{ matrix.test-app }}
          path: ladybug-ff-test-webapp/pom.xml
      - name: Store log of Frank!Runner downloads
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: installFrankRunnerEnv.log - test app = ${{ matrix.test-app }}
          path: frank-runner/installFrankRunnerEnv.log
      - name: Store log of starting the server with the Frank!Runner (official release) - no test webapp
        if: ${{ always() && (steps.decideAboutBuildCode.outputs.buildCode == 'false' && matrix.test-app == 'false' ) }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: serverStartLog.log - test app = ${{ matrix.test-app }}
          path: frank-runner/serverStartLog.log
      - name: Store log of building frank-runner/specials/iaf-webapp without starting that directly
        if: ${{ always() && (steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'true') }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: buildIafWebapp.log - test app = ${{ matrix.test-app }}
          path: frank-runner/specials/ladybug/buildIafWebapp.log
      - name: Store log of starting the server with the Frank!Runner (local build) - no test webapp
        if: ${{ always() && (steps.decideAboutBuildCode.outputs.buildCode == 'true' && matrix.test-app == 'false' ) }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: serverStartLog.log - test app = ${{ matrix.test-app }}
          path: frank-runner/specials/ladybug/serverStartLog.log
      - name: Store log of starting the server with the Frank!Runner - test webapp
        if: ${{ always() && matrix.test-app == 'true' }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: serverStartLog.log - test app = ${{ matrix.test-app }}
          path: ladybug-ff-test-webapp/serverStartLog.log
      - name: Store build.properties
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build.properties - test app = ${{ matrix.test-app }}
          path: frank-runner/build.properties
      - name: Store build.properties of frank-runner/specials/iaf-webapp/build.properties
        if: ${{ always() && matrix.test-app == 'true' }}
        uses: actions/upload-artifact@v4.4.0
        with:
          name: iaf-webapp-build.properties - test app = ${{ matrix.test-app }}
          path: frank-runner/specials/iaf-webapp/build.properties
      - name: Store Apache Tomcat log
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: catalina.properties - test app = ${{ matrix.test-app }}
          path: frank-runner/build/apache-tomcat-*/conf/catalina.properties
      - name: Store Apache Tomcat log
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: logs - test app = ${{ matrix.test-app }}
          path: frank-runner/build/*/logs/*
      - name: Store Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: screenshots - test app = ${{ matrix.test-app }}
          path: ladybug-ff-cypress-test/cypress/screenshots/
      - name: Store Cypress videos
        if: always()
        uses: actions/upload-artifact@v4.4.0
        with:
          name: videos - test app = ${{ matrix.test-app }}
          path: ladybug-ff-cypress-test/cypress/videos/
